# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2020-01-12 08:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_url', models.CharField(max_length=256, verbose_name='封面图片')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='简介')),
                ('like_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='点赞数量')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='发布内容')),
                ('location', models.CharField(blank=True, max_length=64, null=True, verbose_name='位置定位')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('browse_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='浏览数量')),
                ('share_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='分享数量')),
                ('enshrine_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='收藏数量')),
                ('comment_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='评论数量')),
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Article', verbose_name='文章')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('comment_date', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('like_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='点赞数量')),
                ('depth', models.IntegerField(blank=True, default=1, null=True, verbose_name='评论层级')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Article', verbose_name='评论文章')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=256, verbose_name='图片路径')),
                ('articledetial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ArticleDetail', verbose_name='文章')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recv_like_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='收到的点赞数量')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='话题标题')),
                ('image_url', models.CharField(max_length=256, verbose_name='话题封面')),
                ('article_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='文章数')),
                ('browse_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='浏览数量')),
                ('discussion_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='热议人数')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=11, unique=True, verbose_name='手机号')),
                ('token', models.CharField(blank=True, max_length=64, null=True, verbose_name='用户的token')),
                ('nickName', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户名')),
                ('avatarUrl', models.CharField(blank=True, max_length=256, null=True, verbose_name='用户头像url')),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Message', verbose_name='用户详细信息')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='attention',
            field=models.ManyToManyField(related_name='userinfo_attention', to='api.UserInfo', verbose_name='关注'),
        ),
        migrations.AddField(
            model_name='message',
            name='enshrine',
            field=models.ManyToManyField(related_name='article_enshrine', to='api.Article', verbose_name='收藏的文章'),
        ),
        migrations.AddField(
            model_name='message',
            name='like',
            field=models.ManyToManyField(related_name='article_like', to='api.Article', verbose_name='赞过的文章'),
        ),
        migrations.AddField(
            model_name='message',
            name='mention',
            field=models.ManyToManyField(related_name='userinfo_mention', to='api.UserInfo', verbose_name='被提及'),
        ),
        migrations.AddField(
            model_name='comment',
            name='commentator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.UserInfo', verbose_name='评论人'),
        ),
        migrations.AddField(
            model_name='comment',
            name='mention_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_mention_user', to='api.UserInfo', verbose_name='提及用户回复'),
        ),
        migrations.AddField(
            model_name='comment',
            name='reply',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Comment', verbose_name='回复'),
        ),
        migrations.AddField(
            model_name='articledetail',
            name='browse_user',
            field=models.ManyToManyField(related_name='browse_user', to='api.UserInfo', verbose_name='浏览者'),
        ),
        migrations.AddField(
            model_name='articledetail',
            name='mention_user',
            field=models.ManyToManyField(related_name='mention_user', to='api.UserInfo', verbose_name='提及'),
        ),
        migrations.AddField(
            model_name='articledetail',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Topic', verbose_name='参与话题'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='api.UserInfo', verbose_name='作者'),
        ),
    ]
